{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css","redux/contactTypes.js","redux/contactActions.js","components/ContactForm/ContactForm.js","redux/contactSelector.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/contactReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","types","ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACT","changeFilter","createAction","deleteContact","addContact","name","number","payload","id","uuidv4","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","event","currentTarget","value","onSubmit","e","preventDefault","className","s","form","label","type","pattern","title","required","onChange","input","btn","getFilter","state","contacts","filter","getVisibleContact","items","getContacts","normalizeFilter","toLowerCase","el","includes","Filter","useSelector","ContactListItem","onDelete","onClick","ContactList","visibleContacts","list","map","item","App","createReducer","action","find","alert","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistedReducer","persistReducer","contactReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a81e3c02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3z-d7\",\"label\":\"Filter_label__2ulBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3ICv3\",\"item\":\"ContactList_item__3BRPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__3yVQC\"};","// export const ADD_CONTACT = \"contact/add\";\r\n// export const DELETE_CONTACT = \"contact/delete\";\r\n// export const FILTER_CONTACT = \"contact/filter\";\r\nconst types = {\r\n  ADD_CONTACT: \"contact/add\",\r\n  DELETE_CONTACT: \"contact/delete\",\r\n  FILTER_CONTACT: \"contact/filter\",\r\n};\r\n\r\nexport default types;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport types from \"./contactTypes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const changeFilter = createAction(types.FILTER_CONTACT);\r\nexport const deleteContact = createAction(types.DELETE_CONTACT);\r\nexport const addContact = createAction(types.ADD_CONTACT, (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { addContact } from \"../../redux/contactActions\";\r\nimport s from \"./ContactForm.module.css\";\r\n// import PropTypes from \"prop-types\";\r\n//{ onSubmit }\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  const handleChange = (event) => {\r\n    switch (event.currentTarget.name) {\r\n      case \"name\":\r\n        setName(event.currentTarget.value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(event.currentTarget.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // onSubmit({ name, number });\r\n    dispatch(addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            id={uuidv4()}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            id={uuidv4()}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\nexport default ContactForm;\r\n","export const getFilter = (state) => state.contacts.filter;\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisibleContact = (state) => {\r\n  const filter = getFilter(state);\r\n  const contacts = getContacts(state);\r\n  const normalizeFilter = filter.toLowerCase();\r\n  return contacts.filter((el) =>\r\n    el.name.toLowerCase().includes(normalizeFilter)\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { changeFilter } from \"../../redux/contactActions\";\r\nimport { getFilter } from \"../../redux/contactSelector\";\r\n//{ filter, changeFilter }\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n  const onChange = (e) => dispatch(changeFilter(e.currentTarget.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        className={s.input}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n// Filter.propTypes = {\r\n//   filter: PropTypes.string.isRequired,\r\n//   changeFilter: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport s from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={() => onDelete(id)} className={s.btn}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport s from \"./ContactList.module.css\";\r\nimport ContactListItem from \"../ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteContact } from \"../../redux/contactActions\";\r\nimport { getVisibleContact } from \"../../redux/contactSelector\";\r\n//{ contacts, onDelete }\r\nconst ContactList = () => {\r\n  const visibleContacts = useSelector(getVisibleContact);\r\n  const dispatch = useDispatch();\r\n  const onDelete = (id) => dispatch(deleteContact(id));\r\n  return (\r\n    <ul className={s.list}>\r\n      {visibleContacts.map(({ name, number, id }) => {\r\n        return (\r\n          <li key={id} className={s.item}>\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              id={id}\r\n              onDelete={onDelete}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//       id: PropTypes.string.isRequired,\r\n//     })\r\n//   ),\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default ContactList;\r\n","// import { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nfunction App() {\n  // const [filter, setFilter] = useState(\"\");\n  // const [contacts, setContacts] = useState(\n  //   JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\n  // );\n\n  // const normalizeFilter = filter.toLowerCase();\n  // const visibleContacts = contacts.filter((el) =>\n  //   el.name.toLowerCase().includes(normalizeFilter)\n  // );\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const formSubmitData = (data) => {\n  //   if (checkNewName(data.name)) {\n  //     alert(`${data.name} is already in contact!`);\n  //     return;\n  //   }\n  //   const newContact = { ...data, id: uuidv4() };\n  //   setContacts((prevContacts) => [...prevContacts, newContact]);\n  // };\n  // const changeFilter = (e) => {\n  //   setFilter(e.currentTarget.value);\n  // };\n  // const checkNewName = (name) => {\n  //   return contacts.find((el) => el.name === name);\n  // };\n  // const deleteContact = (id) => {\n  //   setContacts((prevContacts) => prevContacts.filter((el) => el.id !== id));\n  // };\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport types from \"./contactTypes\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import { changeFilter, deleteContact, addContact } from \"./contactActions\";\r\n\r\nconst items = createReducer([], {\r\n  [types.ADD_CONTACT]: (state, action) =>\r\n    state.find(({ name }) => name === action.payload.name)\r\n      ? alert(`${action.payload.name} is already in contact!`)\r\n      : [...state, action.payload],\r\n  [types.DELETE_CONTACT]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [types.FILTER_CONTACT]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n// import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst persistedReducer = persistReducer(persistConfig, contactReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistedReducer,\r\n  },\r\n  middleware,\r\n  //   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__bp-F7\",\"form\":\"ContactForm_form__js4pl\",\"input\":\"ContactForm_input__2rbR6\",\"btn\":\"ContactForm_btn__3XFwd\"};"],"sourceRoot":""}